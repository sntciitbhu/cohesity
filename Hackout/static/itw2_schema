create database GEN_MED;

use GEN_MED;

create table shop ( 
	shop_id int auto_increment not null,
	username varchar(16),
	email varchar(32),
	passwd varchar(32), 
	primary key (shop_id)
);

create table shop_info (
	shop_id int,
	name varchar(32) not null unique,
	owner_name varchar(32) not null,
	mob_no varchar(16) not null,
	alt_no varchar(16),
	license varchar(12),
	primary key(shop_id)
);

create table shop_loc (
	loc_id int auto_increment not null,
	shop_id int not null,
	lat decimal(10,8) not null,
	lon decimal(12,8) not null,
	state varchar(32) not null,
	district varchar(32),
	city varchar(32),
	primary key (loc_id),
	foreign key (shop_id) references shop(shop_id) on delete cascade on update cascade
);

create table ph_detail (
	ph_id int auto_increment,
	name varchar(32),
	deg varchar(8),
	college varchar(32),
	primary key (ph_id)

);

create table shop_license (
	shop_id int,
	ph_id int,
	license varchar(12),
	dr_license_type varchar(12),
	dr_license_no varchar(12),
	primary key (license),
	foreign key (shop_id) references shop(shop_id) on delete cascade on update cascade,
	foreign key (ph_id) references ph_detail(ph_id) on delete cascade on update cascade
);

alter table shop_info
	add foreign key (shop_id) references shop(shop_id) on delete cascade on update cascade;

alter table shop_info
	add foreign key (license) references shop_license(license) on delete cascade on update cascade;	

create table med_info (
	med_id int auto_increment,
	gen_name varchar(64) unique,
	primary key(med_id)
);

create table com_name (
	med_id int,
	gen_name varchar(64),
	company_name varchar(64),
	custom_name varchar(64),
	primary key (custom_name),
	foreign key (med_id) references med_info(med_id) on delete cascade on update cascade 
); 

create table avail (
	med_id int,
	shop_id int,
	units int,
	price int,
	mfg_date date,
	exp_date date,
	constraint pk_med primary key (med_id,shop_id)
);

create table reorder(
	med_id int,
	shop_id int,
	units int,
	constraint pk_med primary key (med_id,shop_id)
);

alter table shop add column first_name varchar(32);

alter table shop add column last_name varchar(32);

delimiter $$
create trigger unit_upd after update on avail for each row IF NEW.units<0 THEN SET NEW.units = 0; END IF;
end $$

// Another idea for trigger is that if a shop owner adds a new medicine which is not present in our databases then it //is added in the med info table automatically by the trigger

delimiter $$
create trigger exp_check before update on avail for each row
IF NEW.exp_date < curdate() THEN 
SET NEW.units = 0;
END IF;
end $$

delimiter $$
create trigger min_level_check after update on avail for each row
IF NEW.units < 25 THEN
INSERT into reorder values (NEW.med_id, NEW.shop_id, 50);
END IF;
end $$
